- name: RabbitMQ | Check if rabbitmq is installed
  command: dpkg-query -W rabbitmq
  register: rabbitmq_check_deb
  become: yes
  failed_when: rabbitmq_check_deb.rc > 1
  changed_when: rabbitmq_check_deb.rc == 1
  tags:
    -rabbitmq

- name: RabbitMQ | Add an Apt signing key
  apt_key:
    url: https://github.com/rabbitmq/signing-keys/releases/download/2.0/rabbitmq-release-signing-key.asc
    state: present        
  when: rabbitmq_check_deb.rc == 1
  become: yes
  tags:
    -rabbitmq

- name: RabbitMQ | Erlang repository by rabbitmq
  apt_repository:
    repo: "deb http://dl.bintray.com/rabbitmq/debian {{ansible_distribution_release}} erlang"
    state: present
    filename: bintray.erlang.list
  when: rabbitmq_check_deb.rc == 1
  become: yes
  tags:
    -rabbitmq

- name: RabbitMQ | Install erlang-nox
  apt: pkg="erlang-nox" state="present" update_cache="yes"
  when: rabbitmq_check_deb.rc == 1
  become: yes
  tags:
    -rabbitmq


- name: RabbitMQ | Download package
  get_url:
#    url="https://github.com/rabbitmq/rabbitmq-server/releases/download/rabbitmq_v{{rabbitmq_version.replace('.','_')}}/rabbitmq-server_{{rabbitmq_version}}-1_all.deb"
    url="https://github.com/rabbitmq/rabbitmq-server/releases/download/v{{rabbitmq_version}}/rabbitmq-server_{{rabbitmq_version}}-1_all.deb"
    dest="/tmp/rabbitmq.deb"
  when: rabbitmq_check_deb.rc == 1
  tags:
    -rabbitmq

- name: RabbitMQ | Install package
  apt: deb="/tmp/rabbitmq.deb"
  become: true
  when: rabbitmq_check_deb.rc == 1
  tags:
    -rabbitmq

- name: RabbitMQ | start service
  service: name=rabbitmq-server state=started
  when: docker_test is not defined
  become: true
  tags:
    -rabbitmq

# http://docs.ansible.com/ansible/rabbitmq_user_module.html
- name: RabbitMQ | Remove users, if any
  rabbitmq_user: user={{item}} state=absent
  with_items:
    - "{{rabbitmq_user_remove | default([])}}"
  tags:
    -rabbitmq


# http://docs.ansible.com/ansible/rabbitmq_vhost_module.html
- name: RabbitMQ | Configure VHosts
  rabbitmq_vhost: name={{item}}
  with_items: "{{rabbitmq_vhosts | default([])}}"
  tags:
    -rabbitmq


- name: RabbitMQ | Create users
  rabbitmq_user: >
      user={{item.user}}
      password={{item.password}}
      configure_priv={{item.configure_priv|default('.*')}}
      read_priv={{item.read_priv|default('.*')}}
      write_priv={{item.write_priv|default('.*')}}
      vhost={{item.vhost|default('/')}}
      tags={{item.tags|default('')}}
  with_items: "{{rabbitmq_users | default([])}}"
  tags:
    -rabbitmq


# http://docs.ansible.com/ansible/rabbitmq_plugin_module.html
- name: RabbitMQ | Install plugins
  rabbitmq_plugin: names={{item}} state=enabled prefix=/usr/lib/rabbitmq
  with_items: "{{rabbitmq_plugins | default([])}}"
  notify:
    - restart rabbitmq
  tags:
    -rabbitmq

- name: RabbitMQ | Template default config file
  template: src="{{role_dir}}/templates/rabbitmq.config.j2" dest="/etc/rabbitmq/rabbitmq.config"
  when: rabbitmq_properties is defined
  become: yes
  notify:
    - restart rabbitmq
  tags:
    -rabbitmq

- name: RabbitMQ | Patch optional settings /etc/rabbitmq/rabbitmq.config if any
  lineinfile: dest=/etc/rabbitmq/rabbitmq.config  regexp="{{item.regexp}}" line="{{item.line}}" insertafter="{{item.insertaftertafter | default('EOF')}}"
  with_items:
    - "{{rabbitmq_properties | default()}}"
  notify:
    - restart rabbitmq
  become: yes
  tags:
    -rabbitmq
